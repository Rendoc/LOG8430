Équipe Bravo

Démonstration: https://streamable.com/0fg07

ReadMe

Prérequis: Avoir Python2 et Python3 ainsi que Pip pour chaque version.

*Vous pouvez executer run.sh à la racine ou continuer aux étapes suivantes.*


Les versions suivantes doivent être utilisées:
java : 1.8.x
Scala : 2.1.1
Spark: 2.3.1
MongoDB connector spark : 2.3.1:2.1.1 (voir etape 5)
Python 2.7 pour l’éxécution de app.py
Python 3 pour l’éxécution du client.py


Etape 1
  git clone https://github.com/Rendoc/LOG8430.git

  
 Etape 2
  Ouvrir un terminal dans le dossier application du TP4 et exécuter les commandes suivantes:

    pip2 install -r requirements.txt
    pip3 install -r requirements.txt
   
 Etape 5
    Installer MongoDB avec la commande suivante:

     sudo apt-get install mongodb

 Etape 4
  Suivre ce tutoriel pour installer Spark et mettre en place une grappe Spark avec deux esclaves.
https://medium.com/ymedialabs-innovation/apache-spark-on-a-multi-node-cluster-b75967c8cb2b?fbclid=IwAR2n3iSsoP-hLe4Mv8bmd6bSnGqXpwnN0s95CusREIgYihKtB8mA1Ym1JNc

 Etape 5
 
Le MongoDB Spark Connector sous forme de jar peut etre obtenu a partir du lien suivant: https://spark-packages.org/package/mongodb/mongo-spark (version 2.3.1-s_2.11)

Deplacer le jar dans /usr/local/spark/jars    

 Etape 6
Pour utiliser l’API:

Executer: python2.7 app.py (serveur), le serveur va démarrer les slaves et faire la gestion de la répartition.
Démarrer une instance mongo (locale ou distante)
  Pour locale, executer: mongo
  Vous pouvez changer le uri pour la machine mongo dans db_driver.py
Executer python3 client.py --action ADD pour ajouter des produits
Executer python3 client.py --action MOST pour recuperer les produits les plus fréquents.
Vous pouvez aussi spécifier le port et le lien du rest API avec --server et --port
  Exemple: python3 client.py --server http://localhost --port 5000 --action MOST
  python3 client.py --help pour plus d'information sur les paramètres.
